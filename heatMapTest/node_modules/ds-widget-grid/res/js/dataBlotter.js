$(function() {
    $.widget("ui.dataBlotter", {
        options: {

            dataProcess: undefined,
            data: {},
            url: undefined,

            grouping: undefined,
            groupParam: [],

            searching: undefined,

            paging: undefined,
            pagingParam: undefined,

            sortable: undefined,
            sortParam: undefined,

            pivoted: undefined,

            height: undefined,
            width: undefined,

            themes: undefined,

            colModel: undefined,
            colTotals: true,
            rowTotals:true,

            customFormatter: function(cellValue, opts, rowObject) {

            },

            onSelectRow: function(rowid, status, e) {

            },

            gridComplete: function()
            {

            },

            onCellSelect:function(rowid,iCol, cellcontent,e){},
            afterInsertRow:function(rowid, rowdata, rowelem){},
            ondblClickRow:function(rowid, iRow, iCol, e){},
            onHeaderClick:function(gridstate){},
            onPaging:function(pgButton){},
            onRightClickRow:function(rowid, iRow, iCol, e){},
            onSelectAll:function(aRowids,status){},
			loadComplete:function(data){},

            footerrow: undefined,
            userdata: undefined

        },

        _create: function() {

            var that = this;

            if (that.options.options.dataProcess == "url") {

                $.ajax({
                    url: that.options.options.url,
                    data: {
                        format: 'json'
                    },
                    dataType: 'jsonp',
                    success: function(data) {

                        that.options.options.data = data;
                        that.createColMode(function(colModel) {
                            that.createGrid(colModel, that.options.options.data);
                        });
                    },
                    type: 'GET'
                });
            } else {
                that.createColMode(function(colModel) {
                    that.createGrid(colModel, that.options.options.data);
                });
            }
        },

        createColMode: function(callback) {

            if (this.options.options.dataProcess == "pivot")
                callback({});
            else {

                var that = this;
                var colModel = [];
                var pos = this.options.options.data;
                var that = this;
                
                
                if (pos.length > 0) { 

                    $.each(pos[0], function(key, val) {
    
                        var newField = {};
    
                        newField["name"] = key;
                        newField["label"] = key;
    
                        if (typeof val == "number") {
                            newField["formatter"] = 'number'
                            newField["align"] = 'right'
                            newField["formatoptions"] = {
                                decimalPlaces: 0,
                                defaultValue: '0'
                            }
                            newField["summaryTpl"] = "<b>{0}<b>"
                            newField["summaryType"] = "sum"
                        } else if (key.toLowerCase().indexOf("date") >= 0 || key == "dt") {
    
                            newField["formatter"] = "date";
                            newField["formatoptions"] = {
                                srcformat: 'ISO8601Long',
                                newformat: 'm/d/Y',
                                defaultValue: null
                            }
                            newField["align"] = 'center'
    
                            if (that.options.options.searching == true) {
                                var searchoptions = {
                                    dataInit: function(element) {
                                        $(element).datepicker({
                                            autoclose: true,
                                            format: 'yyyy-mm-dd',
                                            orientation: 'bottom'
                                        });
                                    }
                                }
                                newField["searchoptions"] = searchoptions;
                            }
                        } else {
                            newField["formatter"] = "string";
                            newField["align"] = 'left'
                            if (that.options.options.searching == true) {
    
                                newField["stype"] = 'select'
                                var value = ""
                                for (var i = 0; i < pos.length; i++) {
                                    if (value.indexOf(pos[i][key]) < 0)
                                        value += pos[i][key] + ":" + pos[i][key] + ";"
                                }
    
                                newField["searchoptions"] = {
                                    "value": value
                                };
                            }
                        }
    
                        if (that.options.options.sortable == false)
                            newField["sortable"] = false;
    
                        newField["hidedlg"] = true
                        colModel.push(newField);
                    });
                }

                if (that.options.options.colModel) {
                    var defautColModel = that.options.options.colModel;
                    for (var i = 0; i < defautColModel.length; i++) {
                        for (var j = 0; j < colModel.length; j++) {
                            if (defautColModel[i].name == colModel[j].name) {
                                $.each(defautColModel[i], function(key, val) {
                                    if (key == "formatter") {
                                        if (typeof eval('(' + val + ')') == "function") {
                                            var funcVal = val.substring(val.lastIndexOf("return") + 6, val.lastIndexOf("}"));
                                            var custformatter = eval('(' + val + ')');

                                            that.options.customFormatter = custformatter

                                            colModel[j][key] = that.options.customFormatter;
                                        } else {
                                            colModel[j][key] = val;
                                        }
                                    } else {
                                        colModel[j][key] = val;
                                    }
                                });
                            }
                        }
                    }
                }

                var col = [];
                for (var i = 0; i < colModel.length; i++) {
                    if (colModel[i]['formatter'] == "date")
                        col.push(colModel[i]);
                }
                for (var i = 0; i < colModel.length; i++) {
                    if (colModel[i]['formatter'] == "string")
                        col.push(colModel[i]);
                }
                for (var i = 0; i < colModel.length; i++) {
                    if (colModel[i]['formatter'] == "number" || colModel[i]['formatter'] == "currency" || colModel[i]['formatter'] == "integer")
                        col.push(colModel[i]);
                }
                for (var i = 0; i < colModel.length; i++) {
                    if (typeof colModel[i]['formatter'] == "function")
                        col.push(colModel[i]);
                }

                callback(col);
            }
        },

        createGrid: function(colModel, data) {

            var options = this.options.options;
            var pager = $(this.element).attr('id') + '_pager'
            var html = '<div> <table id="jqGrid_' + $(this.element).attr("id") + '"></table>\
						                        <div id=' + pager + '></div>\
						                     </div>'


            $.jgrid.defaults.responsive = true;
            $.jgrid.defaults.styleUI = 'Bootstrap';
            $.jgrid.styleUI.Bootstrap.base.headerTable = "table table-bordered table-condensed";
            $.jgrid.styleUI.Bootstrap.base.rowTable = "table table-bordered table-condensed";
            $.jgrid.styleUI.Bootstrap.base.footerTable = "table table-bordered table-condensed";
            $.jgrid.styleUI.Bootstrap.base.pagerTable = "table table-condensed";
            $.jgrid.styleUI.Bootstrap.base.rowTable = "table table-bordered table-striped";

            var group = {};

            if (options.grouping) {
                group["grouping"] = options.grouping;
                var groupingView = {
                    groupField: options.groupParam,
                    groupColumnShow: [true],
                    groupText: ["<b>{0}</b>"],
                    groupOrder: ["asc"],
                    groupSummary: [true],
                    groupCollapse: false,
                    groupSummaryPos: ['header']
                }
                group["groupingView"] = groupingView;
            } else
                group["grouping"] = false;

            var paging = {}
            if (options.paging) {
                paging["pager"] = "#" + pager;
                paging["rowNum"] = options.pagingParam
            } else
                paging["pager"] = null

            var sorting = {}
            if (options.sortParam)
                sorting.sortname = options.sortParam
            if (options.multisort)
                sorting.multisort = options.multisort
            else
                sorting.multisort = false;


            var subGridParams = {}
            if (options.subGrid) {
                subGridParams.subGrid = true;

                function showChildGrid(parentRowID, parentRowKey) {

                    $.ajax({

                        url: parentRowKey + ".html",
                        type: "GET",
                        success: function(html) {
                            $("#" + parentRowID).append(html);
                        }
                    });
                }

            } else
                subGridParams.subGrid = false;

            $(this.element).append(html)
			var totalWidth= ($(this.element).parent().width()-30);
			var totalColumns= colModel.length;
            for (var i = 0; i < colModel.length; i++) {
                if (!(colModel[i]["width"]))
                    colModel[i]["width"] = totalWidth / totalColumns;
				else{
					totalWidth-=colModel[i]["width"];
					totalColumns-=1;
				}
            }


			if (this.options.options.gridComplete) {
                var gridCompleteparam = eval('(' + this.options.options.gridComplete + ')');
            }
			else
				var gridCompleteparam = null;
						   

			if (this.options.options.loadComplete) {
				var loadCompleteparam = eval('(' + this.options.options.loadComplete + ')');
			}
			else
				var loadCompleteparam = null;




            if (this.options.options.dataProcess == "pivot") {
				var that = this;
				
				for(var i=0; i < that.options.options.aggregates.length; i++)
				{
					var val = that.options.options.aggregates[i].formatter;
					if(typeof eval('(' + val + ')') == "function") {
						var custformatter = eval('(' + val + ')');
	
						that.options.customFormatter = custformatter
	
						that.options.options.aggregates[i].formatter = that.options.customFormatter;
					} else {
						that.options.options.aggregates[i].formatter= val;
					}
				}
				
                if (options.paging) {
                    var that = this;
                    $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('jqPivot', this.options.options.data, {
                        aggregates: that.options.options.aggregates,
                        xDimension: that.options.options.xDimension,
                        yDimension: that.options.options.yDimension,
                        colTotals: that.options.options.colTotals,
                        rowTotals: that.options.options.rowTotals,
                        rowTotalsText: "Composite"
                    }, {
                        height: 'auto',
                        width: $(this.element).parent().width() - 5,
                        rowNum: paging["rowNum"],
                        pager: paging["pager"],
												gridComplete:gridCompleteparam,
												loadComplete:loadCompleteparam,
												sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                    });
                } else {
                    var that = this;
                    $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('jqPivot', this.options.options.data, {
                        aggregates: that.options.options.aggregates,
                        xDimension: that.options.options.xDimension,
                        yDimension: that.options.options.yDimension,
                        colTotals: that.options.options.colTotals,
                        rowTotals: that.options.options.rowTotals,
                        rowTotalsText: "Composite"
                    }, {
                        height: 'auto',
                        width: $(this.element).parent().width() - 5,
												rowNum: 100000000000000,
												gridComplete:gridCompleteparam,
												loadComplete:loadCompleteparam,
												sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                    });

                }
            } else if (this.options.options.colModel && this.options.options.dataProcess == "url") {
                if (options.paging) {
                    if (options.footerrow) {
                        var that = this;
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({
                            url: this.options.options.url,
                            mtype: "GET",
                            datatype: "jsonp",
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            rowNum: paging["rowNum"],
                            pager: paging["pager"],

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,

                            userDataOnFooter: true,
                            footerrow: true,
                            userdata: options.userdata,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,

                            height: 'auto',
                            width: $(this.element).parent().width() - 5,

                        });

                    } else {
                        var that = this;
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({
                            url: this.options.options.url,
                            mtype: "GET",
                            datatype: "jsonp",
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            rowNum: paging["rowNum"],
                            pager: paging["pager"],

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,

                            userDataOnFooter: true,

                            height: 'auto',
                            width: $(this.element).parent().width() - 5,

                        });
                    }

                } else {
                    if (options.footerrow) {
                        var that = this;
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({
                            url: this.options.options.url,
                            mtype: "GET",
                            datatype: "jsonp",
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,

                            userDataOnFooter: true,
                            footerrow: true,
                            userdata: options.userdata,
														rowNum: 100000000000000,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,

                            height: 'auto',
                            width: $(this.element).parent().width() - 5,

                        });
                    } else {
                        var that = this;
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({
                            url: this.options.options.url,
                            mtype: "GET",
                            datatype: "jsonp",
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,

                            userDataOnFooter: true,
														rowNum: 100000000000000,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,
                            height: 'auto',
                            width: $(this.element).parent().width() - 5,

                        });
                    }
                }
            } else {
                if (options.paging) {
                    if (options.footerrow) {
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({

                            datatype: "local",
                            data: data,
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            rowNum: paging["rowNum"],
                            pager: paging["pager"],

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                            userDataOnFooter: true,
                            footerrow: true,
                            userdata: options.userdata,
 														gridComplete:gridCompleteparam,
														 loadComplete:loadCompleteparam,
                            height: 'auto',
                            width: $(this.element).parent().width() - 5,
                        });
                    } else {
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({

                            datatype: "local",
                            data: data,
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            rowNum: paging["rowNum"],
                            pager: paging["pager"],

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                            userDataOnFooter: true,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,
                            height: 'auto',
                            width: $(this.element).parent().width() - 5,
                        });
                    }
                } else {
                    if (options.footerrow) {
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({

                            datatype: "local",
                            data: data,
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                            userDataOnFooter: true,
                            footerrow: true,
                            userdata: options.userdata,
														rowNum: 100000000000000,
														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,

                            height: 'auto',
                            width: $(this.element).parent().width() - 5,
                        });
                    } else {
                        $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid({

                            datatype: "local",
                            data: data,
                            colModel: colModel,

                            viewrecords: true,
                            gridview: true,
                            autoencode: true,
                            shrinkToFit: false,
                            loadonce: true,
                            altRows: true,

                            grouping: group["grouping"],
                            groupingView: group["groupingView"],

														gridComplete:gridCompleteparam,
														loadComplete:loadCompleteparam,
                            sortname: sorting.sortname,
                            multiSort: sorting.multisort,
                            userDataOnFooter: true,
														rowNum: 100000000000000,

                            height: 'auto',
                            width: $(this.element).parent().width() - 5,
                        });
                    }
                }
            }

            var h = $(this.element).parent().height() - 60 + "px"
            $(this.element).find("#jqGrid_" + $(this.element).attr("id")).parents('div.ui-jqgrid-bdiv').css("max-height", h);

            if (this.options.options.themes) {
                for (var i = 0; i < this.options.options.themes.length; i++) {
                    $(this.element).find('#gview_jqGrid_' + $(this.element).attr("id")).addClass(this.options.options.themes[i]);
                }
            }

            $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('bindKeys');
            $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid("setFrozenColumns");

            $(this.element).find('.ui-jqgrid-bdiv').slimScroll({
                height: $(this.element).find("#jqGrid_" + $(this.element).attr("id")).parents('div.ui-jqgrid-bdiv').css("max-height", h)
            });
            $(this.element).find('.ui-jqgrid-bdiv').slimScrollH({
                width: $(this.element).parent().width() - 5 + 'px'
            });

            if (this.options.options.searching == true) {
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).navGrid("#" + pager, {
                    search: true,
                    add: false,
                    edit: false,
                    del: false,
                    refresh: true
                }, {}, {}, {}, {
                    multipleSearch: true
                });
            }

            if (this.options.options.onSelectRow) {
                var selectRow = eval('(' + this.options.options.onSelectRow + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onSelectRow: selectRow
                });
            }


            if (this.options.options.onCellSelect) {
                var onCellSelect = eval('(' + this.options.options.onCellSelect + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onCellSelect: onCellSelect
                });
            }
            if (this.options.options.afterInsertRow) {
                var afterInsertRow = eval('(' + this.options.options.afterInsertRow + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    afterInsertRow: afterInsertRow
                });
            }
            if (this.options.options.onHeaderClick) {
                var onHeaderClick = eval('(' + this.options.options.onHeaderClick + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onHeaderClick: onHeaderClick
                });
            }
            if (this.options.options.ondblClickRow) {
                var ondblClickRow = eval('(' + this.options.options.ondblClickRow + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    ondblClickRow: ondblClickRow
                });
            }
            if (this.options.options.onPaging) {
                var onPaging = eval('(' + this.options.options.onPaging + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onPaging: onPaging
                });
            }
            if (this.options.options.onRightClickRow) {
                var onRightClickRow = eval('(' + this.options.options.onRightClickRow + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onRightClickRow: onRightClickRow
                });
            }
            if (this.options.options.onSelectAll) {
                var onSelectAll = eval('(' + this.options.options.onSelectAll + ')');
                $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid('setGridParam', {
                    onSelectAll: onSelectAll
                });
            }
			if(this.options.options.footerrow) { $(this.element).find("#jqGrid_" + $(this.element).attr("id")).jqGrid("footerData","set",this.options.options.userdata,true); }
		}
    });
});
