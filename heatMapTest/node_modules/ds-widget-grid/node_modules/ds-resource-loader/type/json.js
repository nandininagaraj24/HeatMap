
var util = require('util'),
    http = require('http'),
    HTTP = require("./http");

var Load = module.exports = function (resource, context) {

    var params = require('extend')(true, {
        type: "GET",
        data: null,
        headers: {
            "Content-Type": "application/json; charset=utf-8"
        }
    }, resource.params || {});

    resource.params = params;

    HTTP.call(this, resource, context);
};

util.inherits(Load, HTTP);

// load
(function () {

    this.load = function () {

        var that = this;
        var req = http.request(this.options, function (res) {

            var resp = [];

            res.setEncoding('utf8');
            res.on('data', function (chunk) {

                resp.push(chunk);

                that.emit('progress', chunk);
            });
            res.on('end', function () {

                var data = resp.join('');
                try {

                    data = JSON.parse(data);

                    if (that.params.part) {
                        data = eval('data.' + that.params.part.toString());
                    }

                    that.emit('done', data);
                } catch (e) {

                    that.emit('error', 'Failed to parse: ' + e.toString());
                }
            });
        });

        req.on("error", function (err) {

            that.emit('error', err);
        });

        if (this.data && this.data != null)
            req.write(this.data);

        req.end();
    }
}).call(Load.prototype);