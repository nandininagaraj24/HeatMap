
var util = require('util'),
    http = require('http'),
    BaseLoad = require("../load");

var Load = module.exports = function (resource, context) {

    BaseLoad.call(this, resource, context);

    var params = require('extend')(true, {
        type: "GET",
        data: null,
        headers: {}
    }, resource.params || {});

    var h = url.parse(params.target).host.split(':');
    var path = url.parse(params.target).path;

    this.options = {
        host: h[0],
        path: path,
        method: params.type,
        headers: params.headers
    };

    this.data = params.data;
    this.params = params;
};

util.inherits(Load, BaseLoad);

// load
(function () {

    this.load = function () {

        var that = this;
        var req = http.request(this.options, function (res) {

            var resp = [];

            res.setEncoding('utf8');
            res.on('data', function (chunk) {

                resp.push(chunk);

                that.emit('progress', chunk);
            });
            res.on('end', function () {

                that.emit('done', resp.join(''));
            });
        });

        req.on("error", function (err) {

            that.emit('error', err);
        });

        if (this.data && this.data != null)
            req.write(this.data);

        req.end();
    }
}).call(Load.prototype);