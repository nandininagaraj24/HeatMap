

var Block = require('./block'),
    util = require('util');

var Tile = module.exports = function (name, params, manifest) {

    Block.call(this, name, params, manifest);
};

util.inherits(Tile, Block);

// view
(function () {

    this.view = function (res, e, context, callback) {

        var ctr = this.manifest.view || "template/view.htm";

        if (typeof ctr === 'string') {

            var s = ctr.split('.');

            switch (s[s.length - 1]) {

                case 'htm':
                case 'html':
                case 'xml':
                    return {
                        target: ctr,
                        type: 'file'
                    };
                default:
                    return ctr;
            }
        }
        else
            return ctr;
    };
}).call(Tile.prototype);

// data
(function () {

    this.data = function (res, e, context, callback) {

        if (!this.manifest.container) return callback("no data specified");

        var data = this.manifest.data;

        e.loader.load.call(this, data, res, e, context, callback);
    };
}).call(Tile.prototype);
